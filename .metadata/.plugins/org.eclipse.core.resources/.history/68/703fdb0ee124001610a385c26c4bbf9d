package server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class ServerClient implements Runnable{
	
	Socket socket;
	Thread thread;
	boolean on;
	PrintWriter out;
	BufferedReader in;
	boolean ready = false;
	int num;
	public static Server server;
	Thread moveThread;
	
	public ServerClient(Socket socket, int num) {
		System.out.println("New client at " + socket.getInetAddress().toString());
		this.socket = socket;
		this.thread = new Thread(this);
		
		try {
			out = new PrintWriter(this.socket.getOutputStream(), true);
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		this.num = num;
	}
	
	public void start() {
		on = true;
		thread.start();
	}
	
	public void stop() {
		on = false;
		try {
			thread.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	public void sendData(String data) {
		out.println(data);
	}
	
	public boolean ready() {
		return ready;
	}
	
	public void run() {
		while(on) {
			try {
				String input = in.readLine();
				if(input.equals("CONNECT")) {
					sendData("CONNECT " + num);
				} else if (input.equals("READY")) {
					ready = true;
				} else if(input.startsWith("MOVE ")) {
					moveThread = new Thread(() -> {
						server.sendToAll(input);
						
						while(!server.allMoved()) {
							try {
								Thread.sleep(10);
							} catch (InterruptedException e) {
								e.printStackTrace();
							}
						}
						
						server.nextMove();
					});
				}
			} catch (IOException e) {
				System.out.println("Could not connect to client " + socket.getInetAddress().toString());
				e.printStackTrace();
			}
		}
	}
}
